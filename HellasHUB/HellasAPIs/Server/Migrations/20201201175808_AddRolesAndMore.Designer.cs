// <auto-generated />
using HellasAPIs.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HellasAPIs.Server.Migrations
{
    [DbContext(typeof(HellasDbContext))]
    [Migration("20201201175808_AddRolesAndMore")]
    partial class AddRolesAndMore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HellasAPIs.Shared.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccUUID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HellasAPIs.Shared.CharRole", b =>
                {
                    b.Property<int>("CharRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharRoleID");

                    b.ToTable("CharRoles");
                });

            modelBuilder.Entity("HellasAPIs.Shared.Character", b =>
                {
                    b.Property<int>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.HasKey("CharacterID");

                    b.HasIndex("AccountId");

                    b.HasIndex("OriginId");

                    b.HasIndex("StatId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("HellasAPIs.Shared.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HellasAPIs.Shared.Origin", b =>
                {
                    b.Property<int>("OriginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OriginID");

                    b.ToTable("Origins");
                });

            modelBuilder.Entity("HellasAPIs.Shared.OwnedItem", b =>
                {
                    b.Property<int>("OwnedItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OwnedItemID");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ItemId");

                    b.ToTable("OwnedItems");
                });

            modelBuilder.Entity("HellasAPIs.Shared.OwnedRoles", b =>
                {
                    b.Property<int>("OwnedRolesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CharRoleId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("OwnedRolesID");

                    b.HasIndex("CharRoleId");

                    b.HasIndex("CharacterId");

                    b.ToTable("OwnedRoles");
                });

            modelBuilder.Entity("HellasAPIs.Shared.Stat", b =>
                {
                    b.Property<int>("StatsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("Const")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.HasKey("StatsID");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("HellasAPIs.Shared.Character", b =>
                {
                    b.HasOne("HellasAPIs.Shared.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HellasAPIs.Shared.Origin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HellasAPIs.Shared.Stat", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Origin");

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("HellasAPIs.Shared.OwnedItem", b =>
                {
                    b.HasOne("HellasAPIs.Shared.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HellasAPIs.Shared.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("HellasAPIs.Shared.OwnedRoles", b =>
                {
                    b.HasOne("HellasAPIs.Shared.CharRole", "CharROle")
                        .WithMany()
                        .HasForeignKey("CharRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HellasAPIs.Shared.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("CharROle");
                });
#pragma warning restore 612, 618
        }
    }
}
